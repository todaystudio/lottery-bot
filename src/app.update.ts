import { Hears, On, InjectBot, Start, Update, Message, Ctx } from "nestjs-telegraf";
import { Telegraf } from 'telegraf';
import { GoogleSheetsService, IStudent } from "./google-sheets/google-sheets.service";
import { actionButtons } from "./app.buttons";
import { Context } from "./context.interface";
import {replyInformationOfStudent} from "./app.reply";
import {NotFoundException} from "@nestjs/common";

@Update()
export class AppUpdate {
  constructor(
    @InjectBot() private readonly bot: Telegraf<Context>,
    private readonly google: GoogleSheetsService,
  ) {}

  @Start()
  async startCommand(ctx: Context) {
    await ctx.reply('–ü—Ä–∏–≤–µ—Ç üî•');
    await ctx.reply('–¢—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —Ç—ã –Ω–∞–∫–æ–ø–∏–ª –±–∏–ª–µ—Ç–∏–∫–æ–≤? üéüÔ∏è', actionButtons());
  }

  @Hears('üÜî –£–∑–Ω–∞—Ç—å –ø–æ ID')
  async getFromId(@Ctx() ctx: Context) {
    await ctx.reply('–ù–∞–ø–∏—à–∏ —Å–≤–æ–π ID üî•');
    ctx.session.type = 'fromID'
  }

  @Hears('üë®üèª‚Äçüíª –£–∑–Ω–∞—Ç—å –ø–æ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏')
  async getFromName(@Ctx() ctx: Context) {
    await ctx.reply('–ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é üî•');
    ctx.session.type = 'fromName'
  }

  @On('text')
  async getMessage(@Message('text') message: string, @Ctx() ctx: Context) {
    if (!ctx.session.type) return;

    if (ctx.session.type === 'fromID') {
      try {
        const student: IStudent = await this.google.getRowCountByParticipantId(message);
        await replyInformationOfStudent(student, ctx)
      } catch (e) {
        await ctx.reply(e.message);
      }
    }

    if (ctx.session.type === 'fromName') {
      try {
        if (message.length < 3) throw new NotFoundException('–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤ ü§®')
        const student: IStudent = await this.google.getRowCountByParticipantName(message);
        await replyInformationOfStudent(student, ctx)
      } catch (e) {
        await ctx.reply(e.message);
      }
    }
  }
}
